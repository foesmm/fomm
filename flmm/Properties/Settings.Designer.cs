//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fomm.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string fallout3LastBSAUnpackPath {
            get {
                return ((string)(this["fallout3LastBSAUnpackPath"]));
            }
            set {
                this["fallout3LastBSAUnpackPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int fallout3BSABrowserPanelSplit {
            get {
                return ((int)(this["fallout3BSABrowserPanelSplit"]));
            }
            set {
                this["fallout3BSABrowserPanelSplit"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://better-oblivion-sorting-software.googlecode.com/svn/data/boss-fallout/mast" +
            "erlist.txt")]
        public string fallout3MasterListUpdateUrl {
            get {
                return ((string)(this["fallout3MasterListUpdateUrl"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastBuildFOMODFromFolderPath {
            get {
                return ((string)(this["LastBuildFOMODFromFolderPath"]));
            }
            set {
                this["LastBuildFOMODFromFolderPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string fallout3LaunchCommand {
            get {
                return ((string)(this["fallout3LaunchCommand"]));
            }
            set {
                this["fallout3LaunchCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastPFPPath {
            get {
                return ((string)(this["LastPFPPath"]));
            }
            set {
                this["LastPFPPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastPFPSourcesPath {
            get {
                return ((string)(this["LastPFPSourcesPath"]));
            }
            set {
                this["LastPFPSourcesPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string pfpOutputPath {
            get {
                return ((string)(this["pfpOutputPath"]));
            }
            set {
                this["pfpOutputPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string fallout3LaunchCommandArgs {
            get {
                return ((string)(this["fallout3LaunchCommandArgs"]));
            }
            set {
                this["fallout3LaunchCommandArgs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int MainFormPanelSplit {
            get {
                return ((int)(this["MainFormPanelSplit"]));
            }
            set {
                this["MainFormPanelSplit"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Fomm.Util.SettingsList MainFormColumnWidths {
            get {
                return ((global::Fomm.Util.SettingsList)(this["MainFormColumnWidths"]));
            }
            set {
                this["MainFormColumnWidths"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string fallout3ModDirectory {
            get {
                return ((string)(this["fallout3ModDirectory"]));
            }
            set {
                this["fallout3ModDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool checkForNewModVersions {
            get {
                return ((bool)(this["checkForNewModVersions"]));
            }
            set {
                this["checkForNewModVersions"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool checkForNewModVersionsInitialized {
            get {
                return ((bool)(this["checkForNewModVersionsInitialized"]));
            }
            set {
                this["checkForNewModVersionsInitialized"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string nexusLoginKey {
            get {
                return ((string)(this["nexusLoginKey"]));
            }
            set {
                this["nexusLoginKey"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string nexusUsername {
            get {
                return ((string)(this["nexusUsername"]));
            }
            set {
                this["nexusUsername"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int PackageManagerPanelSplit {
            get {
                return ((int)(this["PackageManagerPanelSplit"]));
            }
            set {
                this["PackageManagerPanelSplit"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2000-01-01")]
        public global::System.DateTime LastUpdateCheck {
            get {
                return ((global::System.DateTime)(this["LastUpdateCheck"]));
            }
            set {
                this["LastUpdateCheck"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool fallout3IgnoreDLC {
            get {
                return ((bool)(this["fallout3IgnoreDLC"]));
            }
            set {
                this["fallout3IgnoreDLC"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int SelectedAddFomodAction {
            get {
                return ((int)(this["SelectedAddFomodAction"]));
            }
            set {
                this["SelectedAddFomodAction"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SevenZip")]
        public global::SevenZip.OutArchiveFormat pfpCompressionFormat {
            get {
                return ((global::SevenZip.OutArchiveFormat)(this["pfpCompressionFormat"]));
            }
            set {
                this["pfpCompressionFormat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Ultra")]
        public global::SevenZip.CompressionLevel pfpCompressionLevel {
            get {
                return ((global::SevenZip.CompressionLevel)(this["pfpCompressionLevel"]));
            }
            set {
                this["pfpCompressionLevel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Ultra")]
        public global::SevenZip.CompressionLevel fomodCompressionLevel {
            get {
                return ((global::SevenZip.CompressionLevel)(this["fomodCompressionLevel"]));
            }
            set {
                this["fomodCompressionLevel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SevenZip")]
        public global::SevenZip.OutArchiveFormat fomodCompressionFormat {
            get {
                return ((global::SevenZip.OutArchiveFormat)(this["fomodCompressionFormat"]));
            }
            set {
                this["fomodCompressionFormat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool PackageManagerShowsGroups {
            get {
                return ((bool)(this["PackageManagerShowsGroups"]));
            }
            set {
                this["PackageManagerShowsGroups"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DisableIPC {
            get {
                return ((bool)(this["DisableIPC"]));
            }
            set {
                this["DisableIPC"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool NoUACCheck {
            get {
                return ((bool)(this["NoUACCheck"]));
            }
            set {
                this["NoUACCheck"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseDocsFolder {
            get {
                return ((bool)(this["UseDocsFolder"]));
            }
            set {
                this["UseDocsFolder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string fallout3WorkingDirectory {
            get {
                return ((string)(this["fallout3WorkingDirectory"]));
            }
            set {
                this["fallout3WorkingDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool fallout3DoneSetup {
            get {
                return ((bool)(this["fallout3DoneSetup"]));
            }
            set {
                this["fallout3DoneSetup"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>Items</string>
  <string>Items/Guns</string>
  <string>Items/Armor</string>
  <string>Items/Misc</string>
  <string>Locations</string>
  <string>Locations/Houses</string>
  <string>Locations/Interiors</string>
  <string>Locations/Exteriors</string>
  <string>Gameplay</string>
  <string>Gameplay/Perks</string>
  <string>Gameplay/Realism</string>
  <string>Gameplay/Combat</string>
  <string>Gameplay/Loot</string>
  <string>Gameplay/Enemies</string>
  <string>Quests</string>
  <string>Companions</string>
  <string>ModResource</string>
  <string>UI</string>
  <string>Music</string>
  <string>Replacers</string>
  <string>Replacers/Meshes</string>
  <string>Replacers/Textures</string>
  <string>Replacers/Sounds</string>
  <string>Replacers/Shaders</string>
  <string>Tweaks</string>
  <string>Fixes</string>
  <string>Cosmetic</string>
  <string>Cosmetic/Races</string>
  <string>Cosmetic/Eyes</string>
  <string>Cosmetic/Hair</string>
</ArrayOfString>")]
        public global::Fomm.Util.SettingsList pluginGroups {
            get {
                return ((global::Fomm.Util.SettingsList)(this["pluginGroups"]));
            }
            set {
                this["pluginGroups"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<WindowPositions />")]
        public global::Fomm.Util.WindowPositions windowPositions {
            get {
                return ((global::Fomm.Util.WindowPositions)(this["windowPositions"]));
            }
            set {
                this["windowPositions"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>200</string>
  <string>100</string>
  <string>100</string>
  <string>100</string>
</ArrayOfString>")]
        public global::Fomm.Util.SettingsList PackageManagerColumnWidths {
            get {
                return ((global::Fomm.Util.SettingsList)(this["PackageManagerColumnWidths"]));
            }
            set {
                this["PackageManagerColumnWidths"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string fallout3InstallInfoDirectory {
            get {
                return ((string)(this["fallout3InstallInfoDirectory"]));
            }
            set {
                this["fallout3InstallInfoDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool migratedFromPre0130 {
            get {
                return ((bool)(this["migratedFromPre0130"]));
            }
            set {
                this["migratedFromPre0130"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string falloutNewVegasModDirectory {
            get {
                return ((string)(this["falloutNewVegasModDirectory"]));
            }
            set {
                this["falloutNewVegasModDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string falloutNewVegasInstallInfoDirectory {
            get {
                return ((string)(this["falloutNewVegasInstallInfoDirectory"]));
            }
            set {
                this["falloutNewVegasInstallInfoDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string falloutNewVegasWorkingDirectory {
            get {
                return ((string)(this["falloutNewVegasWorkingDirectory"]));
            }
            set {
                this["falloutNewVegasWorkingDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string falloutNewVegasLaunchCommand {
            get {
                return ((string)(this["falloutNewVegasLaunchCommand"]));
            }
            set {
                this["falloutNewVegasLaunchCommand"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string falloutNewVegasLaunchCommandArgs {
            get {
                return ((string)(this["falloutNewVegasLaunchCommandArgs"]));
            }
            set {
                this["falloutNewVegasLaunchCommandArgs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool falloutNewVegasDoneSetup {
            get {
                return ((bool)(this["falloutNewVegasDoneSetup"]));
            }
            set {
                this["falloutNewVegasDoneSetup"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://better-oblivion-sorting-software.googlecode.com/svn/data/boss-fallout-nv/m" +
            "asterlist.txt")]
        public string falloutNewVegasMasterListUpdateUrl {
            get {
                return ((string)(this["falloutNewVegasMasterListUpdateUrl"]));
            }
            set {
                this["falloutNewVegasMasterListUpdateUrl"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool rememberGameMode {
            get {
                return ((bool)(this["rememberGameMode"]));
            }
            set {
                this["rememberGameMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Fallout3")]
        public global::Fomm.Games.SupportedGameModes rememberedGameMode {
            get {
                return ((global::Fomm.Games.SupportedGameModes)(this["rememberedGameMode"]));
            }
            set {
                this["rememberedGameMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool settingsUpgraded {
            get {
                return ((bool)(this["settingsUpgraded"]));
            }
            set {
                this["settingsUpgraded"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool falloutNewVegasUnReadOnlySettingsFiles {
            get {
                return ((bool)(this["falloutNewVegasUnReadOnlySettingsFiles"]));
            }
            set {
                this["falloutNewVegasUnReadOnlySettingsFiles"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool falloutNewVegasAskAboutReadOnlySettingsFiles {
            get {
                return ((bool)(this["falloutNewVegasAskAboutReadOnlySettingsFiles"]));
            }
            set {
                this["falloutNewVegasAskAboutReadOnlySettingsFiles"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool fallout3BoldifyESMs {
            get {
                return ((bool)(this["fallout3BoldifyESMs"]));
            }
            set {
                this["fallout3BoldifyESMs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool falloutNewVegasBoldifyESMs {
            get {
                return ((bool)(this["falloutNewVegasBoldifyESMs"]));
            }
            set {
                this["falloutNewVegasBoldifyESMs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool addMissingInfoToMods {
            get {
                return ((bool)(this["addMissingInfoToMods"]));
            }
            set {
                this["addMissingInfoToMods"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool addMissingInfoToModsInitialized {
            get {
                return ((bool)(this["addMissingInfoToModsInitialized"]));
            }
            set {
                this["addMissingInfoToModsInitialized"] = value;
            }
        }
    }
}
